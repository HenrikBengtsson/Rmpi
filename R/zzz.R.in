### Copyright (C) 2002 Hao Yu 
.First.lib <- function (lib, pkg) {
    mylib <- dirname(.path.package("Rmpi"))
    ver <- package.description("Rmpi", lib = mylib)["Version"]
    vertxt <- paste("\n\tRmpi version:", ver, "\n")
    introtxt <-
        paste("\tRmpi is an interface (wrapper) to MPI APIs\n",
	      "\twith interactive R slave functionalities\n",
              "\tSee `library (help=Rmpi)' for details.\n",
              sep = "")
    if(interactive() || getOption("verbose"))
        cat(paste(vertxt, introtxt))
 
    # Check if lam-mpi is running
    if (length(system("lamnodes",TRUE,ignore.stderr = TRUE)) == 0){
	cat("\n\tLAM/MPI runtime environment is not operating.\n")
	cat("\tStarting LAM/MPI runtime environment.")
	if (!system("lamboot -H",ignore.stderr = TRUE))
	   cat("\tDone!\n")
	else
	   warning("Cannot start LAM/MPI. Exit") 
    }
    library.dynam("Rmpi", pkg, lib)
    if (!TRUE)
	stop("Fail to load Rmpi dynamic library.")
    if (!is.loaded("mpi_initialize"))
	stop("Probably Rmpi has been detached. Please quit R.")
    if(!.Call("mpi_initialize"))
	stop("Cannot start MPI_Init(). Exit")
    #mpi.realloc.comm()
}

.Last.lib <- function(libpath){
    dyn.unload(file.path(libpath, "libs",
	paste("Rmpi", .Platform$"dynlib.ext", sep="")))
}
