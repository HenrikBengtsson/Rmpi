2007-10-01, version 0.5.4:
	All character vector transfers have been rewriteen since R 2.6.0 does not 
	allow any modifications under C level. Due to complication of creating 
	multiple temp buffers for storing receiving buffers, only the first element 
	in a charcter vector (R char vector) is transfered. For sending buffers,
		#define CHAR2(x) ((char *) CHAR(x)) 
	has been used, suggested by Prof. Ripley <ripley@stats.ox.ac.uk>.
	In addition character receive in mpi.irecv is disabled. 

	Add lib64/lam in search path in configure.ac. This  might make Rmpi compile
	under FC 64bit.

	Change libmpi.a to libmpi.so in configure.ac so Rmpi can be compiled under
	OpenMPI. 

	Add AC_PROG_CC in configure.ac to work with SUSE linux, suggested by
	"George Ostrouchov" <ostrouchovg@ornl.gov>.

	Modify configure.ac so that LAM on Mac OS X can be detected.

	Change configure.in to configure.ac and add MPI_INCLUDE, LDFLAGS, 
	CFLAGS, in case MPI_ROOT is supplied by users, suggested by "Dennis van Dok" 
	<dennisvd@nikhef.nl>.

2006-10-11, version 0.5-3:
	R raw data type has been added as type 4. This is used for 
	transfering R objects, i.e., all R objects are serialized to raw 
	type for transfering. This is in line with the change of 
	serialize in R 2.4.0. Wrappers .mpi.serialize and .mpi.unserialize 
	are used in case Rmpi is running under R 2.2.0 to R.2.3.1. 

        Add a few examples to several mpi functions.

        Add mpi.scatter.Robj, mpi.gather.Robj, and mpi.allgather.Robj.

2006-04-5, version 0.5-2:
	Change "MPI_Comm_free(&master);" in mpi_is_master of Rmpi.c to
	"if (!check) MPI_Comm_free(&master);"
	Thanks to Martin Siegert <siegert@sfu.ca> for fixing.

	Some patch to configure.in, suggested by Aaron A. King <aaron.king@umich.edu>,
	so that if MPI_ROOT is supplied as an environmental variable or is given by users,
	mpi.h will be searched within subfolders of MPI_ROOT. 

2005-12-15, version 0.5-1:
	Rename some internal functions used by slaves. They follow by the 
	convention .mpi.slave.xxx and hidden.

	Automatically loading SPRNG in mpi.spawn.Rslaves is dropped. Instead one can 
	use mpi.setup.sprng or mpi.setup.rngstream to setup parallel RNG on slaves. 

	Some codes tidy on mpi.remote.exec and mpi.parSim. As a result, mpi.wrap.fun 
 	is dropped.

	Add mpichhosts to find host names on windows platform.

	Modify mpi.universe.size to return length(mpichhosts())-1 under windows 
	platform.

	Add mpi.apply: an array is scattered to slaves and then a fun is applied.
	Add mpi.applyLB: a load balancing version of mpi.apply.

	Add mpi.parApply, mpi.parLapply, mpi.parRapply, mpi.parCapply, and mpi.parSapply: 
	they are clones of those functions in package snow if job.num=slave.num. They are 
	load balanced if job.num > slave.num.

	Add mpi.parReplicate: wrapper for mpi.parSapply, mainly used in parallel 
	simulation. It will eventually replace mpi.parSim due to its efficiency.

	Add network map drive function in inst/Rslaves.bat. May see some error messages
	if multiple R slaves are spawned on the same remote node. 

	Add nonblocking calls: mpi.isend, mpi.irecv, mpi.isend.Rojb, 
	mpi.iprobe, mpi.test, mpi.testany, mpi.testsome, mpi.testall, 
	mpi.wait, mpi.waitany, mpi.waitsome, mpi.waitall, mpi.cancel, 
	and mpi.test.cancelled.

	Add mpi.comm.maxsize, mpi.request.maxsize, mpi.status.maxsize, 
	mpi.realloc.comm, mpi.realloc.request, and mpi.realloc.status.

2005-11-28, version 0.5-0:
	Rmpi can be compiled and run under MPICH2 for Windows. src/Makevars.win is 
	added so that Rmpi can be compiled without manual configuration if MPICH2 
	for Windows is installed at default place. Instructions to run Rmpi on 
	windows platform are given in 
	http://www.stats.uwo.ca/faculty/yu/Rmpi.

        inst/Rslaves.bat windows batch file is created for spawning R slaves under 
	windows platform (localhost only, a restriction imposed by MPICH2 for 
	Windows).  

	Full sets of creating a Cartesian topology APIs are implemented. 

	inst/Rslaves.sh is modified so that the same R program Master R is ruining 
	will be used by slaves Rs. This allows co-existences of different versions 
	of R.

	inst/Rprofile used by mpiexec under unix and windows platforms is modified. 
	The main change is that sys.parent() in eval is removed. This is due to 
	a unknown reason that the infinite loop cannot be broken if the env R_RPOFILE 
	is used to launch multiple Rs. Objects created on R slaves are no longer 
	global unless <<- are used, though they are accessible during the duration 
	of R slaves. If Rprofile is copied as .Rprofile at the working directory, 
	sys.parent() can still be used (need to modify .Rprofile). 

	To run multiple Rs without using .Rprofile, add the following line  
		R_PROFILE=${R_HOME}/library/Rmpi/Rprofile; export R_PROFILE
	in the R shell script (after "export R_HOME") and rename it, say, Rmpi.
	Then one can use
		mpiexec -n number_of_nodes Rmpi --no-save -q
	to launch multiple Rs (assume Rmpi is in the PATH).

	Parts of nonblocking point-to-point MPI APIs are implemented at C level 
	only. They will be released in the next version of Rmpi. 

2005-05-09, version 0.4-9:
	mpi.remote.fun is deprecated and mpi.remote.exec (mpi.remote.slave)
	has been simplified by using do.call instead.
	replicate is used in mpi.parallel.sim (mpi.remote.slave) instead 
	of sapply. To be consistent, mpi.parallel.sim uses cbind to 
	combine all slave results together.
	
2004-04-21, version 0.4-8:
	Delete .Random.seed in .First.lib if it is a user-defined RNG.  
	Add needsprng = TRUE argument to mpi.spawn.Rslaves so that SPRNG 
	can be loaded if there is the package rsprng. 
	Implement mpi.parallel.sim for parallel Monte Carlo simulation. 
	Some ideas from student projects of Mr. K. Yu, Ms. Tsai, and Mr. 
	W. Wolterman have been used. Thanks to them for their wonderful 
	works. 
	
2004-04-05, version 0.4-7: 
	Update to require R-1.8.1 and remove the requirement for the 
	serialise package (build into R-1.8.1).
	Some minor bugs fix.  
	Add #ifdef MPI2 to src/Rmpi.c and change MPI_Comm_set_errhandler 
	back to MPI_Errhandler_set for backward compatibility with 
	MPI-1.2, suggested by Ross Boylan. 
	Add -DMPI2 in configure.in in case lam lib is detected. Otherwise
	MPI-2 related functions will be disabled.
	Add detect MPI in /usr/lib/mpi or /usr/lib/mpich, hopefully to 
	catch MPICH MPI. 
2003-09-24, version 0.4-6:
	Add some lines to configure.in so that configure can detect 
	lam on Debian Linux. Thanks to Kurt Hornik 
	<Kurt.Hornik@wu-wien.ac.at> for Debian instructions.

2003-02-03, version 0.4-5: internal use.

2002-06-01, version 0.4-4:
	Add a function string for creating a (binary) character buffer.  
	Remove all C++ style comments.
	Remove all deprecated functions.
	Remove mpi.barrier from slavedaemon.R (it causes slaves hanging if 
	master crashed)

2002-05-06, version 0.4-3:

	Take SPRNG out. Use rsprng package instead. Use mpi.init.sprng to 
	start SPRNG.

	Require serialize package

   	mpi.send.Robj, mpi.recv.Robj, mpi.bcast.Robj, and 
	mpi.bcast.Robj2slave use serialize to transfer R objects.

        mpi.bcast.send and mpi.bcast.recv are deprecated.

  	mpi.bcast.send.cmd and mpi.bcast.recv.cmd are replaced by mpi.bcast.cmd

	mpi.bcast.send.Robj and mpi.bcast.recv.Robj are replaced by 
	mpi.bcast.Robj

	New instructions for installing Rmpi for other MPI 
	implementations. 

	Thanks to Kurt Hornik <Kurt.Hornik@wu-wien.ac.at> for 
	Debian instructions.

2002-05-02, version 0.4.2: 
	Some bugs fix. 
	Add Rprofile in inst
	Add a function mpi.comm.dup

2002-04-29, version 0.4.1: 
	Some bugs fix
	Add a function mpi.quit

2002-04-26, version 0.4.0: 
	Initial public release
